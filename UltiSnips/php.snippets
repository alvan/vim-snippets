priority -50

extends html

snippet php
<?php
${1}
endsnippet

snippet er "error report" b
error_reporting(${1:E_ALL});
ini_set('display_errors', '${2:on}');
endsnippet

snippet echo
echo '${1}<br />';
endsnippet

snippet ?echo
<?php echo ${1} ?>
endsnippet

snippet ?e
<?= $this->escape(${1}) ?>
endsnippet

snippet inc
include '${1}';
endsnippet

snippet ?inc
<?php include ${1} ?>
endsnippet

snippet inc_
include_once '${1}';
endsnippet

snippet req_
require_once '${1}';
endsnippet

snippet class "class" b
class ${1}
{
	${2}
}
endsnippet

snippet trait "trait" b
trait ${1}
{
	${2}
}
endsnippet

snippet inter "interface" b
interface ${1}
{
	${2}
}
endsnippet

snippet __con "function construct" b
${1:public }function __construct(${2})
{
	${3}
}
endsnippet

snippet __des "function destruct" b
public function __destruct(${1})
{
	${2}
}
endsnippet

snippet __inv "magic function invoke" b
public function __invoke(${1})
{
	${2}
}
endsnippet

snippet __cal "magic function call" b
public function __call($${1:func}, $${2:args})
{
	${3}
}
endsnippet

snippet __callStatic "magic function callStatic" b
public static function __callStatic($${1:func}, $${2:args})
{
	${3}
}
endsnippet

snippet __set "magic function set" b
public function __set($${1:key}, $${2:val})
{
	${3}
}
endsnippet

snippet __get "magic function get" b
public function __get($${1:key})
{
	${2}
}
endsnippet

snippet __isset "magic function isset" b
public function __isset($${1:key})
{
	${2}
}
endsnippet

snippet __toString "to string function" b
public function __toString()
{
	${1}
}
endsnippet

snippet func "function" b
${1:public }${2}function ${3}(${4})
{
	${5}
}
endsnippet

snippet while "while" b
while (${1})
{
	${2}
}
endsnippet

snippet do "do while" b
do
{
	${2}
} while (${1:/* condition */});
endsnippet

snippet if "if condition" b
if (${1:/* condition */})
{
	${2}
}
endsnippet

snippet ?if
<?php if (${1}): ?>
	${2}
<?php endif; ?>
endsnippet

snippet else
else
{
	${1}
}
endsnippet

snippet elif
else if (${1:/* condition */})
{
	${2}
}
endsnippet

snippet ?else
<?php else: ?>
	${1}
endsnippet

snippet ?elif
<?php elseif (${1}): ?>
	${2}
endsnippet

snippet switch
switch ($${1})
{
case '${2}':
	${3}
	break;

default :
	${4}
	break;
}
endsnippet

snippet case
case '${1}':
	${2}
	break;
endsnippet

snippet for "for loop" b
for ($${2:i} = 0; $$2 < ${1:count}; $$2${3:++})
{
	${4}
}
endsnippet

snippet ?for
<?php for ($${2:i} = 0; $$2 < ${1}; $$2${3:++}): ?>
	${4}
<?php endfor; ?>
endsnippet

snippet foe "foreach loop" b
foreach ($${1} as $${2:val})
{
	${3}
}
endsnippet

snippet ?foe
<?php foreach ($${1} as $${2:val}): ?>
	${3}
<?php endforeach; ?>
endsnippet

snippet try
try
{
	${4}
}
catch (${2:\Exception} $${1:e})
{
	${3}
}
endsnippet

snippet catch
catch (${2:\Exception} $${1:ex})
{
	${3}
}
endsnippet
